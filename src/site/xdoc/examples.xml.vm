<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Examples</title>
    <author email="mybatis-dev@googlegroups.com">The MyBatis Team</author>
  </properties>

 <body>
  <section name="Intregrate migrate in Maven life cycle">
        <p>
            It can be useful integrate Migration steps into a build life cycle, i.e. integrating the database schema
            creation into a CI build lifecycle.</p>

            <source><![CDATA[<plugins>
  <plugin>
    <groupId>org.mybatis.maven</groupId>
    <artifactId>migrations-maven-plugin</artifactId>
    <version>${project.version}</version>
    <dependencies>
      [ add your jdbc driver depencency ]
    </dependencies>
    <executions>
      <execution>
        <id>apply-all-pending-migration</id>
        <phase>process-test-resources</phase>
        <goals>
          <goal>up</goal>
        </goals>
        <configuration>
           <repository> [migration repository path] </repository>
        </configuration>
      </execution>
   </executions>
  </plugin>
<plugins>]]></source>

            <p>If your project uses the sub-modules you can set your parent pom in this way:</p>

            <source><![CDATA[<build>
  <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.mybatis.maven</groupId>
        <artifactId>migrations-maven-plugin</artifactId>
        <version>${project.version}</version>
        <dependencies>
          [ add your jdbc driver depencency ]
        </dependencies>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </pluginManagement>

  <plugins>
    <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
    </plugin>
  </plugins>
</build>]]></source>

            <p>Then, in submodules:</p>

            <source><![CDATA[<plugins>
  <plugin>
    <groupId>org.mybatis.maven</groupId>
    <artifactId>migrations-maven-plugin</artifactId>
    <configuration>
      <repository> [migration repository path] </repository>
      <skip>false</skip>
    </configuration>
    <executions>
      <execution>
        <id>migration-chack</id>
        <phase>test</phase>
        <goals>
          <goal>check</goal>
        </goals>
        <inherited>false</inherited>
      </execution>
    </executions>
  </plugin>

<plugins>]]></source>

    </section>

    <section name="Use Migration commands">
        <p>
            Migration plugin aims to help you to administer your database via MyBatis Schema Migration, so, i.e, you can
            use this plugin to create new migration scripts and to apply the pending scripts to your database.
            The following example will show the common commands to create and administer your database.
        </p>
        <p>
            First of all you have to initialize your migration repository:</p>

            <pre><![CDATA[mvn migration:init -Dmigration.path=/path/to/repository]]></pre>

            <p>This command inizializes the standard migration repository into <code>/path/to/repository</code> folder.</p>

            <p>After you have to modify and customize your enviroment: edit the file
            <code>/path/to/repository/enviroments/development.properties</code> and set the database coordinte.
            So you can apply the first migration to the database:</p>

            <pre><![CDATA[mvn migration:up -Dmigration.path=/path/to/repository]]></pre>

            <p>Now it is possible to create the new script:</p>

            <pre><![CDATA[mvn migration:new -Dmigration.path=/path/to/repository -Dmigration.description=my_second_schema_migration]]></pre>

            <p>the command creates a new empty sql file into the folder <code>/path/to/repository/scripts</code>
            like this:</p>

            <pre><![CDATA[--// First migration.
-- Migration SQL that makes the change goes here.

--//@UNDO
-- SQL to undo the change goes here.]]></pre>

            <p>now you can check the current status of your database by executing this the status goal:</p>

            <pre><![CDATA[mvn migration:status -Dmigration.path=/path/to/repository

[INFO] Executing  Apache Migration StatusCommand
[INFO] ID             Applied At             Description
[INFO] ================================================================================
[INFO] 20100400000001    2010-04-24 22:51:16    create changelog
[INFO] 20100400000002    2010-04-24 22:51:17    first migration
[INFO] 20100400000003    ...pending...          my second schema migration
[INFO]]]></pre>

            <p>finally you can apply the last migration pending script:</p>

            <pre><![CDATA[mvn migration:up -Dmigration.path=/path/to/repository

mvn migration:status -Dmigration.path=/path/to/repository

[INFO] Executing  Apache Migration StatusCommand
[INFO] ID             Applied At             Description
[INFO] ================================================================================
[INFO] 20100400000001    2010-04-24 22:51:16    create changelog
[INFO] 20100400000002    2010-04-24 22:51:17    first migration
[INFO] 20100400000003    2010-04-24 23:14:07    my second schema migration
[INFO]]]></pre>

    </section>

    <section name="Migration plugin report">
      <img src="./images/migration-mvn.png" alt="Migration plugin report"/>
    </section>

    <section name="Migration plugin report with warnings">
      <img src="./images/migration-mvn-warning.png" alt="Migration plugin report with warnings"/>
    </section>

</body>

</document>
