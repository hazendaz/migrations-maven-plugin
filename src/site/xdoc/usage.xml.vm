<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Usage</title>
    <author email="mybatis-dev@googlegroups.com">The MyBatis Team</author>
  </properties>

 <body>
  <section name="Introduction">
    <p>In this chapter some examples will show how to use the Migration Plugin goals:</p>

    <subsection name="Generic Plugin configuration information">
        <p>
            Before starting, please take a look at the following links to know more how to include and configure Maven
            plugins in the POM project:</p>
            <ul>
                <li><a href="http://maven.apache.org/guides/mini/guide-configuring-plugins.html">Configuring Plugins</a></li>
                <li><a href="http://maven.apache.org/guides/plugin/guide-java-plugin-development.html">Plugin Development</a></li>
                <li><a href="http://maven.apache.org/guides/introduction/introduction-to-plugin-prefix-mapping.html">Plugin Prefix</a></li>
            </ul>
    </subsection>

    <subsection name="pom.xml Plugin configuration">
        <p>
            To use Migration Maven plugin in your project you have to configure your <code>pom.xml</code>
            file like this:
            <source><![CDATA[<plugins>
  <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
      <version>${project.version}</version>
      <configuration>
          <repository> [migration repository path] </repository>
      </configuration>
      <dependencies>
          [ add your jdbc driver depencency ]
      </dependencies>
  </plugin>
<plugins>]]></source>
        </p>
    </subsection>

    <subsection name="The migration:status goal">
        <p>
            This goal prints the current migration status of database. A tipical output could be:</p>
            <pre><![CDATA[mvn migration:status -Dmigration.path=/path/to/migration/repository

  ...

[INFO] Executing  Apache Migration StatusCommand
[INFO] ID             Applied At          Description
[INFO] ================================================================================
[INFO] 20100400000001    ...pending...    create changelog
[INFO] 20100400000002    ...pending...    first migration
[INFO] 20100400000003    ...pending...    second migration
[INFO]
...]]></pre>
    </subsection>

    <subsection name="The migration:check goal">
        <p>
            checks the current status of your database migration and fails if one or more script are pending.
            A typical use of this goal is check the migration status into your maven build life cycle:</p>

            <source><![CDATA[<plugin>
  <groupId>org.mybatis.maven</groupId>
  <artifactId>migrations-maven-plugin</artifactId>
  <version>${project.version}</version>
  <configuration>
      <repository> [migration repository path] </repository>
  </configuration>
  <executions>
  <execution>
      <id>migration-chack</id>
      <phase>test</phase>
      <goals>
        <goal>check</goal>
      </goals>
    </execution>
  </executions>
  <dependencies>
      <dependency> [your jdbc dependency] </dependency>
  </dependencies>
</plugin>]]></source>

            <p>and then</p>

            <pre><![CDATA[mvn clean test]]></pre>

            <p>this goal fails if migration plugin founds one or more pending script. To <i>skip</i>  the
            migration check set the properties <code>migration.skip</code> like this:</p>

            <pre><![CDATA[mvn -Dmigration.skip=true clean test]]></pre>
    </subsection>

    <subsection name="Site report for Maven 2 projects">
        <p>
            You can configure your <code>pom.xml</code> to create a simple report of your database status:
        </p>
            <source><![CDATA[<build>
  ...
  <plugins>
    <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
      <version>${project.version}</version>
      <configuration>
        <repository> [migration repository path] </repository>
      </configuration>
      <executions>
        <execution>
          <id>migration-chack</id>
          <phase>test</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
      <dependencies>
        <dependency> [your jdbc dependency] </dependency>
      </dependencies>
    </plugin>
  </plugins>
</build>

<reporting>
  <plugins>
    <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
      <version>${project.version}</version>
      <configuration>
        <repository> [migration repository path] </repository>
      </configuration>
    </plugin>
  </plugins>
</reporting>]]></source>

            <p>once the plugin is configured, users can invoke:</p>

            <pre><![CDATA[mvn site]]></pre>
    </subsection>


     <subsection name="Site report for Maven 3 projects">
        <p>
            You can configure your <code>pom.xml</code> to create a simple report of your database status:</p>

            <source><![CDATA[<build>
  ...
  <plugins>
    <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
      <version>${project.version}</version>
      <configuration>
        <repository> [migration repository path] </repository>
      </configuration>
      <executions>
        <execution>
          <id>migration-chack</id>
          <phase>test</phase>
          <goals>
            <goal>check</goal>
          </goals>
        </execution>
      </executions>
      <dependencies>
        <dependency> [your jdbc dependency] </dependency>
      </dependencies>
    </plugin>
    <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-site-plugin</artifactId>
       <version>3.6</version>
       <configuration>
         <reportPlugins>
           <plugin>
             <groupId>org.mybatis.maven</groupId>
             <artifactId>migrations-maven-plugin</artifactId>
             <version>${project.version}</version>
             <configuration>
               <repository> [migration repository path] </repository>
             </configuration>
           </plugin>
         </reportPlugins>
       </configuration>
     </plugin>
  </plugins>
  ...
]]></source>

            <p>once the plugin is configured, users can invoke:</p>

            <pre><![CDATA[mvn site]]></pre>
    </subsection>
  </section>

</body>

</document>
