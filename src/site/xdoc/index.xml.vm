<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          https://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Introduction</title>
    <author email="mybatis-dev@googlegroups.com">The MyBatis Team</author>
  </properties>

 <body>
  <section name="Why a Maven Plugin - Motivation">
        <p>
            Being <i>Apache Maven</i> users to manage projects lyfecycle, and being at the same time
            <i>MyBatis</i> framework and <i>MyBatis Migration tool</i> to maintain the
            database structure, in order to have a fully integrated tool we started implementing a solution that
            mixes the <i>MyBatis Migration tool</i> power into a standard <i>Apache Maven</i>
            build life cycle.
        </p>
        <p>
            The <i>MyBatis migrations-maven-plugin</i> aims to perform a complete porting of all
            <i>MyBatis Migration tool</i> commands to a standard Maven plugin.
        </p>
    </section>

    <section name="A little bit of history">
        <p>
            The MyBatis migrations-maven-plugin was born in April 2010 after a Skype conference between Marco Speranza
            and Simone Tripodi where both were looking for a solution to integrate MyBatis Migration tool into the
            softrware build life cycle.
            The project was created and maintained by <a href="http://www.99soft.org/">99soft.org</a> and posted
            on Google Code with the name <a href="http://www.99soft.org/projects/migrations-maven-plugin/1.1/">maven-migrate-plugin</a>.
        </p>
        <p>
            In September 2010 Simone proposed Marco as new MyBatis community member, Clinton Begin and the team accepted
            letting him bringing the <i>migrations-maven-plugin</i> code base to become an official
            MyBatis subproject.
        </p>
        <p>
            By that day, the MyBatis Migration Maven Plugin project is maintained by the MyBatis.org team.
        </p>
    </section>

    <section name="Requirements">
        <p>
            Before starting reading the manual, it is very important you're
            familiar with both MyBatis Migration Tool and Apache Maven and therminology,
            otherwise it would be very difficult to understand the described context.
        </p>
    </section>

    <section name="Maven 3 and site generation">
        <p>
        A significant difference between M2 and M3 is site generation.
        If you are used to configure the <code>pom</code> reporting section to generate code
        reports, you should migrate this feature to Maven 3.
        Indeed, the <code>reporting</code> and <code>reportSets</code> sections have been deprecated
        (it won't cause an error with Maven 3, they will just be ignored), and have been replaced by the
        <code>reportPlugins</code> section in the configuration block of the <code>maven-site-plugin</code>
        itself.

        A typical Maven 2 <code>pom.xml</code> file looks like this:

       <source><![CDATA[<reporting>
  <plugins>
    <plugin>
      <groupId>org.mybatis.maven</groupId>
      <artifactId>migrations-maven-plugin</artifactId>
      <version>${project.version}</version>
      <configuration>
        <repository> [migration repository path] </repository>
      </configuration>
    </plugin>
  </plugins>
</reporting>]]></source>

        If you are using M3 for your project, users have to add the following snippet in order to
        generate MyBatis Migration Plugin report automatically.

             <source><![CDATA[<build>
   <plugins>
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-site-plugin</artifactId>
       <version>3.6</version>
       <configuration>
         <reportPlugins>
           <plugin>
             <groupId>org.mybatis.maven</groupId>
             <artifactId>migrations-maven-plugin</artifactId>
             <version>${project.version}</version>
             <configuration>
               <repository> [migration repository path] </repository>
             </configuration>
           </plugin>
         </reportPlugins>
       </configuration>
     </plugin>
   </plugins>
 </build>]]></source>
        </p>
    </section>

    <section name="Acknowledgements">
        <p>
            A special thanks goes to all the special people who made the Maven Migration Plugin
            a reality, above all Clinton Begin, who's strongly supporting the subprojects proliferation.
        </p>
    </section>

</body>

</document>
